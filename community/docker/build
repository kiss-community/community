#!/bin/sh -e

cdgopath() {
    mkdir -p "$GOPATH/src/${2%/*}"
    rm -f "$GOPATH/src/$2"
    ln -s "$PWD/$1" "$GOPATH/src/$2"
    cd "$GOPATH/src/$2"
}

out() { printf '\033[1;33m-> \033[m%s\n' "$@"; }

export GOPATH="$PWD"
export PATH="$GOPATH/bin:$PATH"
export GO111MODULE=off
export DISABLE_WARN_OUTSIDE_CONTAINER=1
export CGO_CFLAGS="$CFLAGS"
export CGO_CXXFLAGS="$CXXFLAGS"
export CGO_LDFLAGS="$LDFLAGS"

patch -p1 < tini-basename.patch

(
    out "Building cli"

    cdgopath cli github.com/docker/cli

    BUILDTIME=0 make VERSION="$2" dynbinary
)

(
    out "Building daemon"

    cdgopath moby github.com/docker/docker
    DOCKER_GITCOMMIT="$2" DOCKER_BUILDTAGS=seccomp VERSION="$2" hack/make.sh dynbinary
)

(
    out "Building docker-init"

    cdgopath tini github.com/krallin/tini

    export DESTDIR="$1"

    cmake -B build \
        -DCMAKE_INSTALL_PREFIX=/usr

    cmake --build build
)

mkdir -p "$1/usr/bin"

cp tini/build/tini-static "$1/usr/bin/docker-init"
cp moby/bundles/dynbinary-daemon/dockerd "$1/usr/bin/dockerd"
cp moby/bundles/dynbinary-daemon/docker-proxy "$1/usr/bin/docker-proxy"
cp cli/build/docker "$1/usr/bin/docker"

mkdir -p "$1/etc/sv/docker"

cp run "$1/etc/sv/docker/"
ln -sf /run/runit/supervise.docker "$1/etc/sv/docker/supervise"
